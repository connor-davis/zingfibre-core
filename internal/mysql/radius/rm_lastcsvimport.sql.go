// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: rm_lastcsvimport.sql

package radius

import (
	"context"
)

const getRmLastcsvimport = `-- name: GetRmLastcsvimport :one
SELECT
    username
FROM
    rm_lastcsvimport
WHERE
    username = ?
LIMIT
    1
`

func (q *Queries) GetRmLastcsvimport(ctx context.Context, username string) (string, error) {
	row := q.db.QueryRowContext(ctx, getRmLastcsvimport, username)
	err := row.Scan(&username)
	return username, err
}

const getRmLastcsvimports = `-- name: GetRmLastcsvimports :many
SELECT
    username
FROM
    rm_lastcsvimport
LIMIT
    ?
OFFSET
    ?
`

type GetRmLastcsvimportsParams struct {
	Limit  int32
	Offset int32
}

func (q *Queries) GetRmLastcsvimports(ctx context.Context, arg GetRmLastcsvimportsParams) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getRmLastcsvimports, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var username string
		if err := rows.Scan(&username); err != nil {
			return nil, err
		}
		items = append(items, username)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
