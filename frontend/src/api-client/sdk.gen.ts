// This file is auto-generated by @hey-api/openapi-ts
import type { Client, Options as ClientOptions, TDataShape } from './client';
import { client as _heyApiClient } from './client.gen';
import type {
  DeleteApiUsersByIdData,
  DeleteApiUsersByIdErrors,
  DeleteApiUsersByIdResponses,
  GetApiAnalyticsMonthlyStatisticsData,
  GetApiAnalyticsMonthlyStatisticsErrors,
  GetApiAnalyticsMonthlyStatisticsResponses,
  GetApiAnalyticsRechargeTypeCountsData,
  GetApiAnalyticsRechargeTypeCountsErrors,
  GetApiAnalyticsRechargeTypeCountsResponses,
  GetApiAuthenticationCheckData,
  GetApiAuthenticationCheckErrors,
  GetApiAuthenticationCheckResponses,
  GetApiAuthenticationMfaEnableData,
  GetApiAuthenticationMfaEnableErrors,
  GetApiAuthenticationMfaEnableResponses,
  GetApiExportsCustomersData,
  GetApiExportsCustomersErrors,
  GetApiExportsCustomersResponses,
  GetApiExportsExpiringCustomersData,
  GetApiExportsExpiringCustomersErrors,
  GetApiExportsExpiringCustomersResponses,
  GetApiExportsRechargesData,
  GetApiExportsRechargesErrors,
  GetApiExportsRechargesResponses,
  GetApiExportsRechargesSummaryData,
  GetApiExportsRechargesSummaryErrors,
  GetApiExportsRechargesSummaryResponses,
  GetApiExportsSummaryData,
  GetApiExportsSummaryErrors,
  GetApiExportsSummaryResponses,
  GetApiPopsData,
  GetApiPopsErrors,
  GetApiPopsResponses,
  GetApiReportsCustomersData,
  GetApiReportsCustomersErrors,
  GetApiReportsCustomersResponses,
  GetApiReportsExpiringCustomersData,
  GetApiReportsExpiringCustomersErrors,
  GetApiReportsExpiringCustomersResponses,
  GetApiReportsRechargesData,
  GetApiReportsRechargesErrors,
  GetApiReportsRechargesResponses,
  GetApiReportsRechargesSummaryData,
  GetApiReportsRechargesSummaryErrors,
  GetApiReportsRechargesSummaryResponses,
  GetApiReportsSummaryData,
  GetApiReportsSummaryErrors,
  GetApiReportsSummaryResponses,
  GetApiUsersByIdData,
  GetApiUsersByIdErrors,
  GetApiUsersByIdResponses,
  GetApiUsersData,
  GetApiUsersErrors,
  GetApiUsersResponses,
  PostApiAuthenticationLoginData,
  PostApiAuthenticationLoginErrors,
  PostApiAuthenticationLoginResponses,
  PostApiAuthenticationLogoutData,
  PostApiAuthenticationLogoutErrors,
  PostApiAuthenticationLogoutResponses,
  PostApiAuthenticationMfaDisableData,
  PostApiAuthenticationMfaDisableErrors,
  PostApiAuthenticationMfaDisableResponses,
  PostApiAuthenticationMfaVerifyData,
  PostApiAuthenticationMfaVerifyErrors,
  PostApiAuthenticationMfaVerifyResponses,
  PostApiAuthenticationPasswordResetData,
  PostApiAuthenticationPasswordResetErrors,
  PostApiAuthenticationPasswordResetResponses,
  PostApiAuthenticationRegisterData,
  PostApiAuthenticationRegisterErrors,
  PostApiAuthenticationRegisterResponses,
  PostApiUsersData,
  PostApiUsersErrors,
  PostApiUsersResponses,
  PutApiUsersByIdData,
  PutApiUsersByIdErrors,
  PutApiUsersByIdResponses,
} from './types.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Monthly Statistics
 * Endpoint to retrieve monthly statistics for the current month
 */
export const getApiAnalyticsMonthlyStatistics = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAnalyticsMonthlyStatisticsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAnalyticsMonthlyStatisticsResponses,
    GetApiAnalyticsMonthlyStatisticsErrors,
    ThrowOnError
  >({
    url: '/api/analytics/monthly-statistics',
    ...options,
  });
};

/**
 * Recharge Type Counts
 * Endpoint to retrieve recharge type counts over a specified date range
 */
export const getApiAnalyticsRechargeTypeCounts = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAnalyticsRechargeTypeCountsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAnalyticsRechargeTypeCountsResponses,
    GetApiAnalyticsRechargeTypeCountsErrors,
    ThrowOnError
  >({
    url: '/api/analytics/recharge-type-counts',
    ...options,
  });
};

/**
 * Check Authentication
 * Endpoint to check if the user is authenticated
 */
export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuthenticationCheckData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationCheckResponses,
    GetApiAuthenticationCheckErrors,
    ThrowOnError
  >({
    url: '/api/authentication/check',
    ...options,
  });
};

/**
 * Login
 * Endpoint for user login
 */
export const postApiAuthenticationLogin = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLoginData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLoginResponses,
    PostApiAuthenticationLoginErrors,
    ThrowOnError
  >({
    url: '/api/authentication/login',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Logout
 * Endpoint for user logout
 */
export const postApiAuthenticationLogout = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLogoutData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLogoutResponses,
    PostApiAuthenticationLogoutErrors,
    ThrowOnError
  >({
    url: '/api/authentication/logout',
    ...options,
  });
};

/**
 * Disable MFA
 * Endpoint to disable multi-factor authentication
 */
export const postApiAuthenticationMfaDisable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationMfaDisableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaDisableResponses,
    PostApiAuthenticationMfaDisableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/disable',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Enable MFA
 * Endpoint to enable multi-factor authentication
 */
export const getApiAuthenticationMfaEnable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationMfaEnableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationMfaEnableResponses,
    GetApiAuthenticationMfaEnableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/enable',
    ...options,
  });
};

/**
 * Verify MFA
 * Endpoint to verify multi-factor authentication code
 */
export const postApiAuthenticationMfaVerify = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaVerifyResponses,
    PostApiAuthenticationMfaVerifyErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/verify',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Password Reset
 * Endpoint to reset user password
 */
export const postApiAuthenticationPasswordReset = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationPasswordResetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationPasswordResetResponses,
    PostApiAuthenticationPasswordResetErrors,
    ThrowOnError
  >({
    url: '/api/authentication/password-reset',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Register
 * Endpoint for user registration
 */
export const postApiAuthenticationRegister = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationRegisterData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationRegisterResponses,
    PostApiAuthenticationRegisterErrors,
    ThrowOnError
  >({
    url: '/api/authentication/register',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Customers Report Export
 * Endpoint to retrieve customers report export in CSV format.
 */
export const getApiExportsCustomers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiExportsCustomersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiExportsCustomersResponses,
    GetApiExportsCustomersErrors,
    ThrowOnError
  >({
    url: '/api/exports/customers',
    ...options,
  });
};

/**
 * Expiring Customers Report Export
 * Endpoint to retrieve expiring customers report export in CSV format.
 */
export const getApiExportsExpiringCustomers = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiExportsExpiringCustomersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiExportsExpiringCustomersResponses,
    GetApiExportsExpiringCustomersErrors,
    ThrowOnError
  >({
    url: '/api/exports/expiring-customers',
    ...options,
  });
};

/**
 * Recharges Report Export
 * Endpoint to retrieve recharges report export in CSV format.
 */
export const getApiExportsRecharges = <ThrowOnError extends boolean = false>(
  options: Options<GetApiExportsRechargesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiExportsRechargesResponses,
    GetApiExportsRechargesErrors,
    ThrowOnError
  >({
    url: '/api/exports/recharges',
    ...options,
  });
};

/**
 * Recharges Summary Report Export
 * Endpoint to retrieve recharges summary report export in CSV format.
 */
export const getApiExportsRechargesSummary = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiExportsRechargesSummaryData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiExportsRechargesSummaryResponses,
    GetApiExportsRechargesSummaryErrors,
    ThrowOnError
  >({
    url: '/api/exports/recharges-summary',
    ...options,
  });
};

/**
 * Summary Report Export
 * Endpoint to retrieve summary report export in CSV format.
 */
export const getApiExportsSummary = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiExportsSummaryData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiExportsSummaryResponses,
    GetApiExportsSummaryErrors,
    ThrowOnError
  >({
    url: '/api/exports/summary',
    ...options,
  });
};

/**
 * Get POPs
 * Endpoint to retrieve a list of points of presence
 */
export const getApiPops = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiPopsData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiPopsResponses,
    GetApiPopsErrors,
    ThrowOnError
  >({
    url: '/api/pops',
    ...options,
  });
};

/**
 * Customers Report
 * Endpoint to retrieve customers report
 */
export const getApiReportsCustomers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiReportsCustomersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiReportsCustomersResponses,
    GetApiReportsCustomersErrors,
    ThrowOnError
  >({
    url: '/api/reports/customers',
    ...options,
  });
};

/**
 * Expiring Customers Report
 * Endpoint to retrieve expiring customers report
 */
export const getApiReportsExpiringCustomers = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiReportsExpiringCustomersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiReportsExpiringCustomersResponses,
    GetApiReportsExpiringCustomersErrors,
    ThrowOnError
  >({
    url: '/api/reports/expiring-customers',
    ...options,
  });
};

/**
 * Recharges Report
 * Endpoint to retrieve recharges report
 */
export const getApiReportsRecharges = <ThrowOnError extends boolean = false>(
  options: Options<GetApiReportsRechargesData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiReportsRechargesResponses,
    GetApiReportsRechargesErrors,
    ThrowOnError
  >({
    url: '/api/reports/recharges',
    ...options,
  });
};

/**
 * Recharges Summary Report
 * Endpoint to retrieve recharges summary report
 */
export const getApiReportsRechargesSummary = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiReportsRechargesSummaryData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiReportsRechargesSummaryResponses,
    GetApiReportsRechargesSummaryErrors,
    ThrowOnError
  >({
    url: '/api/reports/recharges-summary',
    ...options,
  });
};

/**
 * Summary Report
 * Endpoint to retrieve summary report
 */
export const getApiReportsSummary = <ThrowOnError extends boolean = false>(
  options: Options<GetApiReportsSummaryData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiReportsSummaryResponses,
    GetApiReportsSummaryErrors,
    ThrowOnError
  >({
    url: '/api/reports/summary',
    ...options,
  });
};

/**
 * Get Users
 * Endpoint to retrieve a list of users
 */
export const getApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUsersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiUsersResponses,
    GetApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
  });
};

/**
 * Create User
 * Endpoint to create a new user
 */
export const postApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiUsersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiUsersResponses,
    PostApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete User
 * Endpoint to delete a user by ID
 */
export const deleteApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiUsersByIdResponses,
    DeleteApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * Get User
 * Endpoint to retrieve a user by ID
 */
export const getApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiUsersByIdResponses,
    GetApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * Update User
 * Endpoint to update an existing user
 */
export const putApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiUsersByIdResponses,
    PutApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};
