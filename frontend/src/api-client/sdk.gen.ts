// This file is auto-generated by @hey-api/openapi-ts
import type { Client, Options as ClientOptions, TDataShape } from './client';
import { client as _heyApiClient } from './client.gen';
import type {
  DeleteApiPoisByIdData,
  DeleteApiPoisByIdErrors,
  DeleteApiPoisByIdResponses,
  DeleteApiUsersByIdData,
  DeleteApiUsersByIdErrors,
  DeleteApiUsersByIdResponses,
  GetApiAuthenticationCheckData,
  GetApiAuthenticationCheckErrors,
  GetApiAuthenticationCheckResponses,
  GetApiAuthenticationMfaEnableData,
  GetApiAuthenticationMfaEnableErrors,
  GetApiAuthenticationMfaEnableResponses,
  GetApiPoisByIdData,
  GetApiPoisByIdErrors,
  GetApiPoisByIdResponses,
  GetApiPoisData,
  GetApiPoisErrors,
  GetApiPoisResponses,
  GetApiUsersByIdData,
  GetApiUsersByIdErrors,
  GetApiUsersByIdResponses,
  GetApiUsersData,
  GetApiUsersErrors,
  GetApiUsersResponses,
  PostApiAuthenticationLoginData,
  PostApiAuthenticationLoginErrors,
  PostApiAuthenticationLoginResponses,
  PostApiAuthenticationLogoutData,
  PostApiAuthenticationLogoutErrors,
  PostApiAuthenticationLogoutResponses,
  PostApiAuthenticationMfaDisableData,
  PostApiAuthenticationMfaDisableErrors,
  PostApiAuthenticationMfaDisableResponses,
  PostApiAuthenticationMfaVerifyData,
  PostApiAuthenticationMfaVerifyErrors,
  PostApiAuthenticationMfaVerifyResponses,
  PostApiAuthenticationRegisterData,
  PostApiAuthenticationRegisterErrors,
  PostApiAuthenticationRegisterResponses,
  PostApiPoisData,
  PostApiPoisErrors,
  PostApiPoisResponses,
  PostApiUsersData,
  PostApiUsersErrors,
  PostApiUsersResponses,
  PutApiPoisByIdData,
  PutApiPoisByIdErrors,
  PutApiPoisByIdResponses,
  PutApiUsersByIdData,
  PutApiUsersByIdErrors,
  PutApiUsersByIdResponses,
} from './types.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Check Authentication
 * Endpoint to check if the user is authenticated
 */
export const getApiAuthenticationCheck = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiAuthenticationCheckData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationCheckResponses,
    GetApiAuthenticationCheckErrors,
    ThrowOnError
  >({
    url: '/api/authentication/check',
    ...options,
  });
};

/**
 * Login
 * Endpoint for user login
 */
export const postApiAuthenticationLogin = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLoginData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLoginResponses,
    PostApiAuthenticationLoginErrors,
    ThrowOnError
  >({
    url: '/api/authentication/login',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Logout
 * Endpoint for user logout
 */
export const postApiAuthenticationLogout = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationLogoutData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationLogoutResponses,
    PostApiAuthenticationLogoutErrors,
    ThrowOnError
  >({
    url: '/api/authentication/logout',
    ...options,
  });
};

/**
 * Disable MFA
 * Endpoint to disable multi-factor authentication
 */
export const postApiAuthenticationMfaDisable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationMfaDisableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaDisableResponses,
    PostApiAuthenticationMfaDisableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/disable',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Enable MFA
 * Endpoint to enable multi-factor authentication
 */
export const getApiAuthenticationMfaEnable = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetApiAuthenticationMfaEnableData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiAuthenticationMfaEnableResponses,
    GetApiAuthenticationMfaEnableErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/enable',
    ...options,
  });
};

/**
 * Verify MFA
 * Endpoint to verify multi-factor authentication code
 */
export const postApiAuthenticationMfaVerify = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationMfaVerifyData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationMfaVerifyResponses,
    PostApiAuthenticationMfaVerifyErrors,
    ThrowOnError
  >({
    url: '/api/authentication/mfa/verify',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Register
 * Endpoint for user registration
 */
export const postApiAuthenticationRegister = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<PostApiAuthenticationRegisterData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiAuthenticationRegisterResponses,
    PostApiAuthenticationRegisterErrors,
    ThrowOnError
  >({
    url: '/api/authentication/register',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get Points Of Interest
 * Endpoint to retrieve a list of points of interest
 */
export const getApiPois = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiPoisData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiPoisResponses,
    GetApiPoisErrors,
    ThrowOnError
  >({
    url: '/api/pois',
    ...options,
  });
};

/**
 * Create Point Of Interest
 * Endpoint to create a new point of interest
 */
export const postApiPois = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiPoisData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiPoisResponses,
    PostApiPoisErrors,
    ThrowOnError
  >({
    url: '/api/pois',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete Point Of Interest
 * Endpoint to delete a point of interest by ID
 */
export const deleteApiPoisById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiPoisByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiPoisByIdResponses,
    DeleteApiPoisByIdErrors,
    ThrowOnError
  >({
    url: '/api/pois/{id}',
    ...options,
  });
};

/**
 * Get Point Of Interest
 * Endpoint to retrieve a point of interest by ID
 */
export const getApiPoisById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiPoisByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiPoisByIdResponses,
    GetApiPoisByIdErrors,
    ThrowOnError
  >({
    url: '/api/pois/{id}',
    ...options,
  });
};

/**
 * Update Point Of Interest
 * Endpoint to update an existing point of interest
 */
export const putApiPoisById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiPoisByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiPoisByIdResponses,
    PutApiPoisByIdErrors,
    ThrowOnError
  >({
    url: '/api/pois/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};

/**
 * Get Users
 * Endpoint to retrieve a list of users
 */
export const getApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<GetApiUsersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetApiUsersResponses,
    GetApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
  });
};

/**
 * Create User
 * Endpoint to create a new user
 */
export const postApiUsers = <ThrowOnError extends boolean = false>(
  options?: Options<PostApiUsersData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    PostApiUsersResponses,
    PostApiUsersErrors,
    ThrowOnError
  >({
    url: '/api/users',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete User
 * Endpoint to delete a user by ID
 */
export const deleteApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).delete<
    DeleteApiUsersByIdResponses,
    DeleteApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * Get User
 * Endpoint to retrieve a user by ID
 */
export const getApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<GetApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    GetApiUsersByIdResponses,
    GetApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
  });
};

/**
 * Update User
 * Endpoint to update an existing user
 */
export const putApiUsersById = <ThrowOnError extends boolean = false>(
  options: Options<PutApiUsersByIdData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).put<
    PutApiUsersByIdResponses,
    PutApiUsersByIdErrors,
    ThrowOnError
  >({
    url: '/api/users/{id}',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  });
};
