// This file is auto-generated by @hey-api/openapi-ts

export const CreatePointOfInterestSchema = {
  properties: {
    Key: {
      type: 'string',
    },
    Name: {
      type: 'string',
    },
  },
} as const;

export const CreateUserSchema = {
  properties: {
    Email: {
      format: 'email',
      type: 'string',
    },
    Password: {
      minLength: 8,
      type: 'string',
    },
    Role: {
      default: 'user',
      enum: ['admin', 'staff', 'user'],
      type: 'string',
    },
  },
} as const;

export const ErrorResponseSchema = {
  properties: {
    details: {
      default:
        'The request could not be understood or was missing required parameters.',
      type: 'string',
    },
    error: {
      default: 'Bad Request',
      type: 'string',
    },
  },
} as const;

export const LoginRequestSchema = {
  properties: {
    Email: {
      format: 'email',
      type: 'string',
    },
    Password: {
      maxLength: 100,
      minLength: 6,
      type: 'string',
    },
  },
} as const;

export const PointOfInterestSchema = {
  properties: {
    ID: {
      format: 'uuid',
      type: 'string',
    },
    Key: {
      type: 'string',
    },
    Name: {
      type: 'string',
    },
  },
} as const;

export const RechargeTypeCountSchema = {
  properties: {
    Count: {
      type: 'integer',
    },
    Period: {
      type: 'string',
    },
    Type: {
      type: 'string',
    },
  },
} as const;

export const SuccessResponseSchema = {
  properties: {
    data: {
      oneOf: [
        {
          properties: {
            Email: {
              format: 'email',
              type: 'string',
            },
            ID: {
              format: 'uuid',
              type: 'string',
            },
            MfaEnabled: {
              type: 'boolean',
            },
            MfaVerified: {
              type: 'boolean',
            },
            Role: {
              default: 'user',
              enum: ['admin', 'staff', 'user'],
              type: 'string',
            },
          },
        },
        {
          properties: {
            ID: {
              format: 'uuid',
              type: 'string',
            },
            Key: {
              type: 'string',
            },
            Name: {
              type: 'string',
            },
          },
        },
        {
          properties: {
            Count: {
              type: 'integer',
            },
            Period: {
              type: 'string',
            },
            Type: {
              type: 'string',
            },
          },
        },
        {
          items: {
            properties: {
              Email: {
                format: 'email',
                type: 'string',
              },
              ID: {
                format: 'uuid',
                type: 'string',
              },
              MfaEnabled: {
                type: 'boolean',
              },
              MfaVerified: {
                type: 'boolean',
              },
              Role: {
                default: 'user',
                enum: ['admin', 'staff', 'user'],
                type: 'string',
              },
            },
          },
          type: 'array',
        },
        {
          items: {
            properties: {
              ID: {
                format: 'uuid',
                type: 'string',
              },
              Key: {
                type: 'string',
              },
              Name: {
                type: 'string',
              },
            },
          },
          type: 'array',
        },
        {
          items: {
            properties: {
              Count: {
                type: 'integer',
              },
              Period: {
                type: 'string',
              },
              Type: {
                type: 'string',
              },
            },
          },
          type: 'array',
        },
      ],
    },
    details: {
      default: 'Operation completed successfully',
      type: 'string',
    },
    message: {
      default: 'Success',
      type: 'string',
    },
    pages: {
      default: 1,
      type: 'integer',
    },
  },
} as const;

export const UpdatePointOfInterestSchema = {
  properties: {
    Key: {
      type: 'string',
    },
    Name: {
      type: 'string',
    },
  },
} as const;

export const UpdateUserSchema = {
  properties: {
    Email: {
      format: 'email',
      type: 'string',
    },
    Role: {
      default: 'user',
      enum: ['admin', 'staff', 'user'],
      type: 'string',
    },
  },
} as const;

export const UserSchema = {
  properties: {
    Email: {
      format: 'email',
      type: 'string',
    },
    ID: {
      format: 'uuid',
      type: 'string',
    },
    MfaEnabled: {
      type: 'boolean',
    },
    MfaVerified: {
      type: 'boolean',
    },
    Role: {
      default: 'user',
      enum: ['admin', 'staff', 'user'],
      type: 'string',
    },
  },
} as const;
